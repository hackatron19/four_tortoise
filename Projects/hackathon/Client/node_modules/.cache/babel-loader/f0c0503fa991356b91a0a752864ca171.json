{"ast":null,"code":"var _jsxFileName = \"/home/aman208/Desktop/Projects/hackathon/Client/src/Account/Retailer.js\";\nimport { Button, Form, Header, Image, Icon, Loader, Divider, Label, Table, Transition } from \"semantic-ui-react\";\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport React, { Component } from \"react\";\nimport fire from \"../firebase\";\nimport \"../App.css\";\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = () => {\n      fire.auth().onAuthStateChanged(user => {\n        if (user) {\n          this.setState({\n            loggedIn: true,\n            showSetting: true,\n            loading: false\n          });\n        } else {\n          this.setState({\n            loading: false,\n            loggedIn: false\n          });\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.edit = index => {\n      this.setState({\n        showEdit: !this.state.showEdit\n      });\n    };\n\n    this.state = {\n      loading: true,\n      loggedIn: true,\n      showSetting: false,\n      showEdit: false\n    };\n  } // Auth Change Listener\n\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#f9f9f9\",\n        marginTop: \"0vh\",\n        minHeight: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"headerContainer\",\n      style: {\n        marginTop: \"0vh\",\n        minHeight: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.loggedIn ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      style: {\n        paddingTop: \"3vh\",\n        marginTop: \"0vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"setting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Header.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Manage Account\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), this.state.showSetting ? React.createElement(Button, {\n      color: this.state.showEdit ? \"white\" : \"green\",\n      size: \"small\",\n      onClick: () => this.edit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Button.Content, {\n      visible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.showEdit ? \"DISABLE EDIT MODE\" : \"ENABLE EDIT MODE\")) : null) : null, this.state.showEdit ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Transition, {\n      visible: this.state.showEdit,\n      animation: \"fade\",\n      duration: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        paddingBottom: \"8vh\",\n        paddingTop: \"2vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"updateTitle\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      onChange: this.handleChange,\n      name: \"updatePicture\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(Form.TextArea, {\n      rows: 4,\n      onChange: this.handleChange,\n      name: \"updateDescription\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Button, {\n      as: \"div\",\n      compact: true,\n      labelPosition: \"left\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Label, {\n      as: \"span\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"UPDATE\"), React.createElement(Button, {\n      color: \"yellow\",\n      icon: true,\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"pencil\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })))))) : null, this.state.loading ? React.createElement(Loader, {\n      style: {\n        marginTop: \"5%\"\n      },\n      active: true,\n      inline: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default Account;","map":{"version":3,"sources":["/home/aman208/Desktop/Projects/hackathon/Client/src/Account/Retailer.js"],"names":["Button","Form","Header","Image","Icon","Loader","Divider","Label","Table","Transition","Route","BrowserRouter","Router","Switch","React","Component","fire","Account","constructor","props","componentWillMount","auth","onAuthStateChanged","user","setState","loggedIn","showSetting","loading","handleChange","e","target","name","value","edit","index","showEdit","state","render","backgroundColor","marginTop","minHeight","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["\nimport {\n    Button,\n    Form,\n    Header,\n    Image,\n    Icon,\n    Loader,\n    Divider,\n    Label,\n    Table,\n    Transition\n  } from \"semantic-ui-react\";\n\n\nimport { Route,\n    \n    BrowserRouter as Router , \n    Switch} from 'react-router-dom'\n    \n  import React, { Component } from \"react\";\n  import fire from \"../firebase\";\n  import \"../App.css\";\n  \n  class Account extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        \n        loading: true,\n        loggedIn: true,\n        showSetting: false,\n        showEdit: false,\n      \n      };\n    }\n  \n    // Auth Change Listener\n    componentWillMount = () => {\n      fire.auth().onAuthStateChanged(user => {\n        if (user) {\n          this.setState({ loggedIn: true, showSetting: true , loading:false });\n         \n        } else {\n          this.setState({ loading: false, loggedIn: false });\n        }\n      });\n    };\n  \n    // Form Handler\n    handleChange = e => {\n      this.setState({ [e.target.name]: e.target.value });\n    };\n\n    edit = index => {\n        this.setState({ showEdit: !this.state.showEdit });\n      };\n    \n  \n  \n\n  \n  \n    render() {\n       \n    return (\n        <div style={{\n            backgroundColor: \"#f9f9f9\",\n            marginTop: \"0vh\",\n            minHeight: \"100vh\"\n          }}\n        >\n          <div\n            id=\"headerContainer\"\n            style={{ marginTop: \"0vh\", minHeight: \"100vh\" }}\n          >\n            \n            {this.state.loggedIn ? (\n              <div>\n                <Header as=\"h2\" style={{ paddingTop: \"3vh\", marginTop: \"0vh\" }}>\n                  <Icon name=\"setting\" />\n                  <Header.Content>Manage Account</Header.Content>\n                </Header>\n                <Divider />\n  \n               \n                {this.state.showSetting ? (\n                  <Button\n                    color={this.state.showEdit ? \"white\" : \"green\"}\n                    size=\"small\"\n                    onClick={() => this.edit()}\n                  >\n                    <Button.Content visible>\n                      {this.state.showEdit\n                        ? \"DISABLE EDIT MODE\"\n                        : \"ENABLE EDIT MODE\"}\n                    </Button.Content>\n                  </Button>\n                ) : null}\n              </div>\n            ) : null}\n  \n            {/* CONTAINER */}\n            {this.state.showEdit ?  \n            <div>\n            <Transition\n           visible={this.state.showEdit}\n            animation=\"fade\"\n            duration={400}\n          >\n            <Form\n              style={{\n                paddingBottom: \"8vh\",\n                paddingTop: \"2vh\"\n              }}\n            >\n              <Form.Group widths=\"equal\">\n                <Form.Input\n                  onChange={this.handleChange}\n                  name=\"updateTitle\"\n                 \n                  required\n                />\n                <Form.Input\n                  fluid\n                  onChange={this.handleChange}\n                  name=\"updatePicture\"\n               \n                  required\n                />\n              </Form.Group>\n              <Form.TextArea\n                rows={4}\n                onChange={this.handleChange}\n                name=\"updateDescription\"\n             \n                required\n              />\n  \n              <Button\n                as=\"div\"\n                compact\n                labelPosition=\"left\"\n                size=\"small\"\n              \n              >\n                <Label as=\"span\" color=\"black\">\n                  UPDATE\n                </Label>\n                <Button color=\"yellow\" icon compact>\n                  <Icon name=\"pencil\" color=\"black\" />\n                </Button>\n              </Button>\n            </Form>\n          </Transition>\n        </div> : null }\n           \n  \n            {/* SPINNER */}\n            {this.state.loading ? (\n              <Loader style={{ marginTop: \"5%\" }} active inline=\"centered\" />\n            ) : null}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  export default Account;"]},"metadata":{},"sourceType":"module"}