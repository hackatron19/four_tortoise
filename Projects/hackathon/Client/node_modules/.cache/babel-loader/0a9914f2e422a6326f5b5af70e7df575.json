{"ast":null,"code":"var _jsxFileName = \"/home/aman208/Desktop/Projects/hackathon/Client/src/Test/test4.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Button, Dropdown, Grid, Header } from 'semantic-ui-react';\nconst getOptions = [{\n  key: 'm',\n  value: 'male',\n  text: 'Male'\n}, {\n  key: 'f',\n  value: 'female',\n  text: 'Female'\n}, {\n  key: 'o',\n  value: 'other',\n  text: 'Other'\n}];\n\nclass DropdownExampleRemote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFetching: false,\n      multiple: true,\n      search: true,\n      searchQuery: null,\n      value: [],\n      options: getOptions\n    };\n\n    this.handleChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n\n    this.handleSearchChange = (e, {\n      searchQuery\n    }) => this.setState({\n      searchQuery\n    });\n\n    this.fetchOptions = () => {\n      this.setState({\n        isFetching: true\n      });\n      setTimeout(() => {\n        this.setState({\n          isFetching: false,\n          options: getOptions\n        });\n      }, 500);\n    };\n\n    this.toggleSearch = e => this.setState({\n      search: e.target.checked\n    });\n\n    this.toggleMultiple = e => {\n      const value = this.state.value;\n      const multiple = e.target.checked; // convert the value to/from an array\n\n      const newValue = multiple ? _.compact([value]) : _.head(value) || '';\n      this.setState({\n        multiple,\n        value: newValue\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          multiple = _this$state.multiple,\n          options = _this$state.options,\n          isFetching = _this$state.isFetching,\n          search = _this$state.search,\n          value = _this$state.value;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.fetchOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Fetch\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: search,\n      onChange: this.toggleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), ' ', \"Search\")), React.createElement(Dropdown, {\n      fluid: true,\n      selection: true,\n      multiple: multiple,\n      search: search,\n      options: options,\n      value: value,\n      placeholder: \"Add Users\",\n      onChange: this.handleChange,\n      onSearchChange: this.handleSearchChange,\n      disabled: isFetching,\n      loading: isFetching,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, JSON.stringify(this.state, null, 2))));\n  }\n\n}\n\nexport default DropdownExampleRemote;","map":{"version":3,"sources":["/home/aman208/Desktop/Projects/hackathon/Client/src/Test/test4.js"],"names":["_","React","Component","Button","Dropdown","Grid","Header","getOptions","key","value","text","DropdownExampleRemote","state","isFetching","multiple","search","searchQuery","options","handleChange","e","setState","handleSearchChange","fetchOptions","setTimeout","toggleSearch","target","checked","toggleMultiple","newValue","compact","head","render","JSON","stringify"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Button, Dropdown, Grid, Header } from 'semantic-ui-react'\n\nconst getOptions =  [\n    { key: 'm',value: 'male', text: 'Male'  },\n    { key: 'f', value: 'female' , text: 'Female' },\n    { key: 'o', value: 'other' , text: 'Other' },\n  ]\n\n  \n  \n  class DropdownExampleRemote extends Component {\n    state = {\n      isFetching: false,\n      multiple: true,\n      search: true,\n      searchQuery: null,\n      value: [],\n      options: getOptions,\n    }\n  \n    handleChange = (e, { value }) => this.setState({ value })\n    handleSearchChange = (e, { searchQuery }) => this.setState({ searchQuery })\n  \n    fetchOptions = () => {\n      this.setState({ isFetching: true })\n  \n      setTimeout(() => {\n        this.setState({ isFetching: false, options: getOptions })\n      \n      }, 500)\n    }\n  \n \n  \n    toggleSearch = (e) => this.setState({ search: e.target.checked })\n  \n    toggleMultiple = (e) => {\n      const { value } = this.state\n      const multiple = e.target.checked\n      // convert the value to/from an array\n      const newValue = multiple ? _.compact([value]) : _.head(value) || ''\n      this.setState({ multiple, value: newValue })\n    }\n  \n    render() {\n      const { multiple, options, isFetching, search, value } = this.state\n  \n      return (\n        <Grid>\n          <Grid.Column width={8}>\n            <p>\n              <Button onClick={this.fetchOptions}>Fetch</Button>\n            \n              <label>\n                <input\n                  type='checkbox'\n                  checked={search}\n                  onChange={this.toggleSearch}\n                />{' '}\n                Search\n              </label>\n            \n            </p>\n            <Dropdown\n              fluid\n              selection\n              multiple={multiple}\n              search={search}\n              options={options}\n              value={value}\n              placeholder='Add Users'\n              onChange={this.handleChange}\n              onSearchChange={this.handleSearchChange}\n              disabled={isFetching}\n              loading={isFetching}\n            />\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header>State</Header>\n            <pre>{JSON.stringify(this.state, null, 2)}</pre>\n          </Grid.Column>\n        </Grid>\n      )\n    }\n  }\n  \n  export default DropdownExampleRemote\n  \n"]},"metadata":{},"sourceType":"module"}