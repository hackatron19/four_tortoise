{"ast":null,"code":"var _jsxFileName = \"/home/aman208/Desktop/Projects/hackathon/Client/src/Account/Retailer/PostItem.js\";\nimport { Button, Form, Header, Image, Icon, Loader, Divider, Label, Table, Transition, Grid } from \"semantic-ui-react\";\nimport React, { Component } from \"react\";\nimport fire from \"../../firebase\";\n\nclass PostItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.account = () => {\n      const _fire$auth = fire.auth(),\n            currentUser = _fire$auth.currentUser;\n\n      fire.database().ref(\"foodItem/\".concat(currentUser.uid, \"/\")).on(\"value\", snapshot => {\n        var obj = snapshot.val();\n        var list = [];\n        var keys = [];\n\n        for (let a in obj) {\n          list.push(obj[a]);\n          keys.push(a);\n        }\n\n        this.setState({\n          list: list,\n          keys: keys,\n          loading: false\n        });\n      });\n    };\n\n    this.delete = index => {\n      const _fire$auth2 = fire.auth(),\n            currentUser = _fire$auth2.currentUser;\n\n      fire.database().ref(\"feed/\".concat(currentUser.uid, \"/\").concat(this.state.keys[index])).remove();\n    };\n\n    this.edit = (item, index) => {\n      this.setState({\n        showPostItem: !this.state.showPostItem,\n        modal: index,\n        updateTitle: item.title,\n        updateDescription: item.description,\n        updatePicture: item.picture\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      showSetting: false,\n      loading: false,\n      showPostItem: false,\n      list: [],\n      keys: [],\n      quantity: 0,\n      cost: 0\n    };\n  }\n\n  // update = (index) => {\n  //   const { currentUser } = fire.auth();\n  //   this.setState({ loading: true });\n  //   fire\n  //     .database()\n  //     .ref(`feed/${currentUser.uid}/${this.state.keys[index]}`)\n  //     .update({\n  //       title: this.state.updateTitle,\n  //       description: this.state.updateDescription,\n  //       picture: this.state.updatePicture\n  //     })\n  //     .then(() => {\n  //       this.setState({\n  //         loading: false\n  //       });\n  //     });\n  // };\n  render() {\n    const listItems = this.state.list.map((item, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Table, {\n      fixed: true,\n      stackable: true,\n      style: {\n        marginTop: \"4vh\",\n        marginBottom: \"0vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      style: {\n        background: \"lightcoral\",\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      width: 4,\n      style: {\n        border: \"4px solid black\",\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, item.product)), React.createElement(Table.Cell, {\n      width: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, item.quantity)), React.createElement(Table.Cell, {\n      width: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" Score : \", item.cost)), React.createElement(Table.Cell, {\n      width: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, item.metric)), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      width: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"blue\",\n      onClick: () => this.delete(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), \"DELETE\"), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), this.state.showSetting ? React.createElement(Button, {\n      size: \"small\",\n      color: this.state.showPostItem ? \"white\" : \"yellow\",\n      onClick: () => this.edit(item, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Button.Content, {\n      visible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"pencil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), this.state.showPostItem ? \"DISABLE EDIT\" : \"ENABLE EDIT\")) : null)))), React.createElement(Transition, {\n      visible: this.state.showPostItem && this.state.modal === index,\n      animation: \"vertical flip\",\n      duration: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        paddingBottom: \"8vh\",\n        paddingTop: \"2vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      name: \"updateTitle\",\n      label: \"New Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      onChange: this.handleChange,\n      name: \"updatePicture\",\n      label: \"New Picture Src\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(Form.TextArea, {\n      rows: 4,\n      onChange: this.handleChange,\n      name: \"updateDescription\",\n      label: \"New Description\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(Button, {\n      as: \"div\",\n      compact: true,\n      labelPosition: \"left\",\n      size: \"large\",\n      onClick: () => this.update(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Label, {\n      as: \"span\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"UPDATE\"), React.createElement(Button, {\n      color: \"yellow\",\n      icon: true,\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"pencil\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })))))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.state.showSetting ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, listItems) : null, this.state.loading ? React.createElement(Loader, {\n      style: {\n        marginTop: \"5%\"\n      },\n      active: true,\n      inline: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default PostItem;","map":{"version":3,"sources":["/home/aman208/Desktop/Projects/hackathon/Client/src/Account/Retailer/PostItem.js"],"names":["Button","Form","Header","Image","Icon","Loader","Divider","Label","Table","Transition","Grid","React","Component","fire","PostItem","constructor","props","handleChange","e","setState","target","name","value","console","log","state","account","auth","currentUser","database","ref","uid","on","snapshot","obj","val","list","keys","a","push","loading","delete","index","remove","edit","item","showPostItem","modal","updateTitle","title","updateDescription","description","updatePicture","picture","showSetting","quantity","cost","render","listItems","map","marginTop","marginBottom","background","color","border","margin","product","metric","paddingBottom","paddingTop","update"],"mappings":"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","sourcesContent":["\nimport {\n    Button,\n    Form,\n    Header,\n    Image,\n    Icon,\n    Loader,\n    Divider,\n    Label,\n    Table,\n    Transition , Grid\n  } from \"semantic-ui-react\";\n  import React, { Component } from \"react\";\n  import fire from \"../../firebase\";\n \n\n  \n  class PostItem extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        showSetting :  false ,\n        loading: false,\n        showPostItem: false,\n        list: [],\n        keys:[],\n        quantity : 0 ,\n        cost : 0\n      \n\n\n      };\n    }\n  \n    \n    handleChange = e => {\n      this.setState({ [e.target.name]: e.target.value });\n      console.log(this.state)\n    };\n  \n   \n    account = () => {\n      const { currentUser } = fire.auth();\n      fire\n        .database()\n        .ref(`foodItem/${currentUser.uid}/`)\n        .on(\"value\", snapshot => {\n          var obj = snapshot.val();\n          var list = [];\n          var keys = [];\n          for (let a in obj) {\n            list.push(obj[a]);\n            keys.push(a);\n          }\n          \n          this.setState({\n            list: list,\n            keys: keys,\n            loading: false\n          });\n        });\n    };\n  \n    delete = index => {\n   \n      const { currentUser } = fire.auth();\n      fire\n        .database()\n        .ref(`feed/${currentUser.uid}/${this.state.keys[index]}`)\n        .remove();\n    };\n  \n    edit = (item, index) => {\n      \n      this.setState({ showPostItem: !this.state.showPostItem , modal : index ,\n         updateTitle :item.title ,\n         updateDescription :item.description , \n        updatePicture : item.picture });\n\n        console.log(this.state)\n    };\n  \n    // update = (index) => {\n    //   const { currentUser } = fire.auth();\n  \n    //   this.setState({ loading: true });\n    //   fire\n    //     .database()\n    //     .ref(`feed/${currentUser.uid}/${this.state.keys[index]}`)\n    //     .update({\n    //       title: this.state.updateTitle,\n    //       description: this.state.updateDescription,\n    //       picture: this.state.updatePicture\n    //     })\n    //     .then(() => {\n    //       this.setState({\n    //         loading: false\n    //       });\n    //     });\n    // };\n  \n    render() {\n\n      const listItems = this.state.list.map((item, index) => (\n        <div>\n          <Table fixed stackable\n            style={{ marginTop: \"4vh\", marginBottom: \"0vh\" }}\n          >\n            <Table.Body>\n             <Table.Row style={{background:\"lightcoral\" , color:\"black\"  }}>\n              <Table.Cell width={4} style={{border:\"4px solid black\" , margin:\"10px\"}}>\n               <h2>{item.product}</h2>\n              </Table.Cell>\n\n              <Table.Cell width={2}>\n                <h2>{item.quantity}</h2>\n              </Table.Cell>\n              <Table.Cell width={2}>\n                <h3> Score : {item.cost}</h3>\n              </Table.Cell>\n              <Table.Cell width={2}> <h3>{item.metric}</h3></Table.Cell>\n\n              <Table.Cell textAlign=\"center\" width={3}>\n              \n                <Button size=\"small\" color='blue' onClick={() => this.delete(index)}>\n                  <Icon name='close' />\n                  DELETE\n                </Button> \n                <Divider/>\n\n\n                {this.state.showSetting ?\n                   <Button size=\"small\"color={this.state.showPostItem ? \"white\" : \"yellow\"}\n                    onClick={() => this.edit(item ,index)}>\n                  <Button.Content visible>\n                  <Icon name='pencil' />\n                      {this.state.showPostItem\n                        ? \"DISABLE EDIT\"\n                        : \"ENABLE EDIT\"}\n                    </Button.Content>\n                </Button> : null }\n\n              </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n\n          <Transition\n  visible={this.state.showPostItem && this.state.modal === index}\n  animation=\"vertical flip\"\n  duration={400}\n>\n  <Form\n    style={{\n      paddingBottom: \"8vh\",\n      paddingTop: \"2vh\"\n    }}\n  >\n    <Form.Group widths=\"equal\">\n      <Form.Input\n        onChange={this.handleChange}\n        name=\"updateTitle\"\n        label =\"New Title\"\n      />\n      <Form.Input\n        fluid\n        onChange={this.handleChange}\n        name=\"updatePicture\"\n        label =\"New Picture Src\"\n        required\n      />\n    </Form.Group>\n    <Form.TextArea\n      rows={4}\n      onChange={this.handleChange}\n      name=\"updateDescription\"\n      label =\"New Description\"\n    \n      required\n    />\n\n    <Button as=\"div\" compact\n      labelPosition=\"left\"\n      size=\"large\"\n      onClick={() => this.update(index)}\n    >\n      <Label as=\"span\" color=\"black\">\n        UPDATE\n      </Label>\n      <Button color=\"yellow\" icon compact>\n        <Icon name=\"pencil\" color=\"black\" />\n      </Button>\n    </Button>\n  </Form>\n</Transition>\n        \n       \n        </div>\n      ));\n\n      return (\n        <div >\n            {this.state.showSetting ? <div>{listItems}</div> : null}\n            {this.state.loading ? (\n              <Loader style={{ marginTop: \"5%\" }} active inline=\"centered\" />\n            ) : null}\n          </div>\n       \n       \n      );\n    }\n  }\n\n\n\n       \n  \n  export default PostItem;\n\n\n\n\n\n\n\n  "]},"metadata":{},"sourceType":"module"}