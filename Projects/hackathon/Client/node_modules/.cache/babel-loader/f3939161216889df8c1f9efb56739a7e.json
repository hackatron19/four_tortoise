{"ast":null,"code":"import _defineProperty from \"/home/aman208/Desktop/Projects/hackathon/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/aman208/Desktop/Projects/hackathon/src/Test/test1.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Grid, Button, Select, Icon } from \"semantic-ui-react\";\nconst options = [{\n  key: 'kg',\n  text: 'Kilogram',\n  value: 'kg'\n}, {\n  key: 'l',\n  text: 'Litres',\n  value: 'l'\n}, {\n  key: 'num',\n  text: 'Count',\n  value: 'num'\n}];\n\nclass test1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: []\n    };\n    this.onClickButtonAdder = this.onClickButtonAdder.bind(this);\n    this.onClickButtonSubmit = this.onClickButtonSubmit.bind(this);\n  }\n\n  onClickButtonAdder(event) {\n    event.preventDefault();\n    this.setState({\n      fields: [{\n        product: \"\",\n        quantity: \"\",\n        type: \"\"\n      }, ...this.state.fields]\n    });\n  }\n\n  onClickFormGroupButton(index) {\n    let fields = [...this.state.fields];\n    fields.splice(index, 1);\n    this.setState({\n      fields\n    });\n  }\n\n  onChangeFormGroupInput(index, e) {\n    e.preventDefault();\n    this.setState(_objectSpread({}, this.state, {\n      fields: {\n        [e.target.name]: e.target.value\n      }\n    }));\n  }\n\n  onClickButtonSubmit(event) {\n    event.preventDefault();\n    console.log(this.state.fields);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: \"50%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      id: \"buildyourform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Build your own form!\"), this.state.fields.map((value, index) => React.createElement(FormGroup, {\n      inputChange: this.onChangeFormGroupInput.bind(this, index),\n      buttonClick: this.onClickFormGroupButton.bind(this, index),\n      value: value,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Button, {\n      primary: true,\n      onClick: this.onClickButtonAdder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" Add Form \"), React.createElement(Button, {\n      secondary: true,\n      onClick: this.onClickButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Preview \"));\n  }\n\n}\n\nfunction FormGroup(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"product\",\n    placeholder: \"Product\",\n    value: props.value.product,\n    onChange: props.inputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"quantity\",\n    placeholder: \"Quantity\",\n    value: props.value.quantity,\n    onChange: props.inputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Select, {\n    placeholder: \"Select Type\",\n    options: options,\n    placeholder: \"Type\",\n    value: props.value.type,\n    onChange: props.inputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: props.buttonClick,\n    disabled: props.buttonDisabled,\n    tabIndex: \"-1\",\n    name: \"type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"cancel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })));\n}\n\nexport default test1;","map":{"version":3,"sources":["/home/aman208/Desktop/Projects/hackathon/src/Test/test1.js"],"names":["React","Component","Grid","Button","Select","Icon","options","key","text","value","test1","constructor","props","state","fields","onClickButtonAdder","bind","onClickButtonSubmit","event","preventDefault","setState","product","quantity","type","onClickFormGroupButton","index","splice","onChangeFormGroupInput","e","target","name","console","log","render","width","marginLeft","marginRight","map","FormGroup","inputChange","buttonClick","buttonDisabled"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport {\n    \n  Grid,\n  Button , Select , Icon\n  \n  } from \"semantic-ui-react\";\n\n  const options = [\n    { key: 'kg', text: 'Kilogram', value: 'kg' },\n    { key: 'l', text: 'Litres', value: 'l' },\n    { key: 'num', text: 'Count', value: 'num' },\n  ]\n\n  \n \n  class test1 extends Component {\n    constructor(props) {\n      super(props);\n      this.state = { fields: [ \n          ] };\n      this.onClickButtonAdder = this.onClickButtonAdder.bind(this);\n      this.onClickButtonSubmit = this.onClickButtonSubmit.bind(this);\n\n    }\n\n    onClickButtonAdder(event) {\n        event.preventDefault();\n        this.setState({\n          fields: [{ product: \"\" , quantity : \"\" , type :  \"\" }, ...this.state.fields]\n        });\n      }\n    \n      onClickFormGroupButton(index) {\n        let fields = [...this.state.fields];\n        fields.splice(index, 1);\n        this.setState({ fields });\n      }\n    \n      onChangeFormGroupInput(index, e) {\n        e.preventDefault();\n        this.setState({ ...this.state, fields: { [e.target.name]: e.target.value } });\n      }\n    \n      onClickButtonSubmit(event) {\n        event.preventDefault();\n        console.log(this.state.fields);\n      }\n\n\n    render(){\n        return ( <div style={{width:\"50%\" ,marginLeft:\"auto\" , marginRight:\"auto\" }}>\n\n    <fieldset id=\"buildyourform\">\n    <legend>Build your own form!</legend>\n    {this.state.fields.map((value, index) => (\n          <FormGroup\n            inputChange={this.onChangeFormGroupInput.bind(this, index)}\n            buttonClick={this.onClickFormGroupButton.bind(this, index)}\n            \n            value={value}\n            key={index}\n          />\n        ))}\n\n     \n\n    </fieldset>\n \n    <br/>\n    <Button primary onClick= {this.onClickButtonAdder} > Add Form </Button>\n    <Button secondary onClick= {this.onClickButtonSubmit} > Preview </Button>\n\n\n\n        </div> )\n    }\n}\n\n\n  \n  function FormGroup(props) {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          name=\"product\"\n          placeholder=\"Product\"\n          value={props.value.product}\n          onChange={props.inputChange}\n        />\n         <input\n         \n          type=\"number\"\n          name=\"quantity\"\n          placeholder=\"Quantity\"\n          value={props.value.quantity}\n          onChange={props.inputChange}\n        />\n        <Select placeholder='Select Type' \n        options={options} placeholder=\"Type\"\n        value={props.value.type}\n        onChange={props.inputChange} />\n        <button\n          \n          type=\"button\"\n          onClick={props.buttonClick}\n          disabled={props.buttonDisabled}\n          tabIndex=\"-1\"\n          name=\"type\"\n        ><Icon name=\"cancel\" /></button>\n      </div>\n    );\n  }\n\n\n\n\n\n\n\n\nexport default test1;"]},"metadata":{},"sourceType":"module"}